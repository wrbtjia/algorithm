package main


/**
26. 删除排序数组中的重复项

给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。

不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

示例 1:

给定数组 nums = [1,1,2],

函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。

你不需要考虑数组中超出新长度后面的元素。
示例 2:

给定 nums = [0,0,1,1,1,2,2,3,3,4],

函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。

你不需要考虑数组中超出新长度后面的元素。

 */

func removeDuplicates1(nums []int) int {
	idx := 0
	for _, num := range nums {
		// 如果是第一位自然不可能重复（同时为了保证数组不越界）
		if (idx < 1) || (num != nums[idx-1]) {
			nums[idx] = num // 如果当前元素不是重复值，我们就将其分配到目前不重复元素到达的index
			idx += 1
		}
	}
	return idx
}